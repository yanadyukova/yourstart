{"version":3,"sources":["webpack:///./blocks/map/index.js","webpack:///../public/node_modules/baron/src/utils.js","webpack:///../node_modules/process/browser.js","webpack:///../public/node_modules/baron/src/log.js","webpack:///./blocks/scroller/index.js","webpack:///../public/node_modules/baron/src/core.js","webpack:///../public/node_modules/baron/src/autoUpdate.js","webpack:///../public/node_modules/baron/src/fix.js","webpack:///../public/node_modules/baron/src/controls.js"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL,C;;;;;;;;ACjCA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;AC1GA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;+CCtBA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;;AAEA,oDAAoD;AACpD;;AAEA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;AC32BA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;+CCjFA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,qBAAqB;AACpD;AACA;;AAEA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;AC5QA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"0.9f6081663b530cfe7206.js","sourcesContent":["import Scroller from 'scroller';\r\n\r\nexport default function() {\r\n    let scroller = new Scroller();\r\n    scroller.init();\r\n\r\n    $('.jsMapContentToggle').click(function() {\r\n        $(this).toggleClass('active');\r\n        $('.jsMapContent').toggleClass('full');\r\n        setTimeout(function() {\r\n            scroller.update();\r\n            scroller.update();\r\n        }, 500);\r\n        return false;\r\n    });\r\n\r\n    $('.jsMapViewToggle').click(function() {\r\n        $('.jsMapViewToggle').toggleClass('active');\r\n        $('.jsMapView').toggle();\r\n        return false;\r\n    });\r\n\r\n    $('.jsMapSortingToggle').click(function() {\r\n        $('.jsMapSorting').toggle();\r\n        $('.jsMapSearch').hide();\r\n        return false;\r\n    });\r\n\r\n    $('.jsMapSearchToggle').click(function() {\r\n        $('.jsMapSearch').toggle();\r\n        $('.jsMapSorting').hide();\r\n        return false;\r\n    });\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./blocks/map/index.js\n// module id = 346\n// module chunks = 0","'use strict'\n\n// Test via a getter in the options object to see if the passive property is accessed\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\nvar supportsPassive = false\n\ntry {\n    var opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n            supportsPassive = true\n        }\n    })\n\n    window.addEventListener('test', null, opts)\n} catch (e) {\n    // pass\n}\n\nmodule.exports.event = function event(elem, _eventNames, handler, mode) {\n    var eventNames = _eventNames.split(' ')\n    var prefix = mode == 'on' ? 'add' : 'remove'\n\n    eventNames.forEach(function(eventName) {\n        var options = false\n\n        if (['scroll', 'touchstart', 'touchmove'].indexOf(eventName) != -1 && supportsPassive) {\n            options = { passive: true }\n        }\n\n        elem[prefix + 'EventListener'](eventName, handler, options)\n    })\n}\n\nfunction each(obj, handler) {\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            handler(key, obj[key])\n        }\n    }\n}\n\nmodule.exports.css = function css(node, key, value) {\n    var styles\n\n    if (value === undefined) {\n        // Getter mode\n        if (typeof key == 'string') {\n            return node.style[key]\n        }\n\n        styles = key\n    } else {\n        styles = {}\n        styles[key] = value\n    }\n\n    each(styles, function(k, val) {\n        node.style[k] = val\n    })\n}\n\nmodule.exports.add = function add(node, cls) {\n    if (!cls) {\n        return\n    }\n\n    node.classList.add(cls)\n}\n\nmodule.exports.rm = function add(node, cls) {\n    if (!cls) {\n        return\n    }\n\n    node.classList.remove(cls)\n}\n\nmodule.exports.has = function has(node, cls) {\n    if (!cls) {\n        return false\n    }\n\n    return node.classList.contains(cls)\n}\n\nmodule.exports.clone = function clone(_input) {\n    var output = {}\n    var input = _input || {}\n\n    each(input, function(key, value) {\n        output[key] = value\n    })\n\n    return output\n}\n\nmodule.exports.qs = function qs(selector, _ctx) {\n    if (selector instanceof HTMLElement) {\n        return selector\n    }\n\n    var ctx = _ctx || document\n\n    return ctx.querySelector(selector)\n}\n\nmodule.exports.each = each\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../public/node_modules/baron/src/utils.js\n// module id = 347\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/process/browser.js\n// module id = 348\n// module chunks = 0","module.exports = function log(level, msg, more) {\n    var func = console[level] || console.log\n    var args = [\n        'Baron: ' + msg,\n        more\n    ]\n\n    Function.prototype.apply.call(func, console, args)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../public/node_modules/baron/src/log.js\n// module id = 349\n// module chunks = 0","import baron from 'baron';\r\n\r\nexport default class Scroller {\r\n    constructor() {\r\n        this.scroller;\r\n        this.container = $('.jsScroller');\r\n        this.options = {\r\n            root: '.jsScroller',\r\n            scroller: '.baron__scroller',\r\n            bar: '.baron__bar'\r\n        };\r\n    }\r\n    init() {\r\n        if (!this.container.length) return;\r\n\r\n        this.scroller = baron(this.options);\r\n    }\r\n    update() {\r\n        if (this.scroller) {\r\n            this.scroller.update();\r\n        }\r\n    }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./blocks/scroller/index.js\n// module id = 353\n// module chunks = 0","'use strict'\n\nvar g = (function() {\n    return this || (1, eval)('this')\n}())\nvar scopedWindow = g && g.window || g\n\nvar event = require('./utils').event\nvar css = require('./utils').css\nvar add = require('./utils').add\nvar has = require('./utils').has\nvar rm = require('./utils').rm\nvar clone = require('./utils').clone\nvar qs = require('./utils').qs\n\nvar _baron = baron // Stored baron value for noConflict usage\n// var Item = {}\nvar pos = ['left', 'top', 'right', 'bottom', 'width', 'height']\n// Global store for all baron instances (to be able to dispose them on html-nodes)\nvar instances = []\nvar origin = {\n    v: { // Vertical\n        x: 'Y', pos: pos[1], oppos: pos[3], crossPos: pos[0], crossOpPos: pos[2],\n        size: pos[5],\n        crossSize: pos[4], crossMinSize: 'min-' + pos[4], crossMaxSize: 'max-' + pos[4],\n        client: 'clientHeight', crossClient: 'clientWidth',\n        scrollEdge: 'scrollLeft',\n        offset: 'offsetHeight', crossOffset: 'offsetWidth', offsetPos: 'offsetTop',\n        scroll: 'scrollTop', scrollSize: 'scrollHeight'\n    },\n    h: { // Horizontal\n        x: 'X', pos: pos[0], oppos: pos[2], crossPos: pos[1], crossOpPos: pos[3],\n        size: pos[4],\n        crossSize: pos[5], crossMinSize: 'min-' + pos[5], crossMaxSize: 'max-' + pos[5],\n        client: 'clientWidth', crossClient: 'clientHeight',\n        scrollEdge: 'scrollTop',\n        offset: 'offsetWidth', crossOffset: 'offsetHeight', offsetPos: 'offsetLeft',\n        scroll: 'scrollLeft', scrollSize: 'scrollWidth'\n    }\n}\n\n// Some ugly vars\nvar opera12maxScrollbarSize = 17\n// I hate you https://github.com/Diokuz/baron/issues/110\nvar macmsxffScrollbarSize = 15\nvar macosxffRe = /[\\s\\S]*Macintosh[\\s\\S]*\\) Gecko[\\s\\S]*/\nvar isMacFF = macosxffRe.test(scopedWindow.navigator && scopedWindow.navigator.userAgent)\n\nvar log, liveBarons, shownErrors\n\nif (process.env.NODE_ENV !== 'production') {\n    log = require('./log')\n    liveBarons = 0\n    shownErrors = {\n        liveTooMany: false,\n        allTooMany: false\n    }\n}\n\n// window.baron and jQuery.fn.baron points to this function\nfunction baron(user) {\n    var withParams = !!user\n    var tryNode = (user && user[0]) || user\n    var isNode = typeof user == 'string' || tryNode instanceof HTMLElement\n    var params = isNode ? { root: user } : clone(user)\n    var jQueryMode\n    var rootNode\n    var defaultParams = {\n        direction: 'v',\n        barOnCls: '_scrollbar',\n        resizeDebounce: 0,\n        event: event,\n        cssGuru: false,\n        impact: 'scroller',\n        position: 'static'\n    }\n\n    params = params || {}\n\n    // Extending default params by user-defined params\n    for (var key in defaultParams) {\n        if (params[key] == null) { // eslint-disable-line\n            params[key] = defaultParams[key]\n        }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (params.position == 'absolute' && params.impact == 'clipper') {\n            log('error', [\n                'Simultaneous use of `absolute` position and `clipper` impact values detected.',\n                'Those values cannot be used together.',\n                'See more https://github.com/Diokuz/baron/issues/138'\n            ].join(' '), params)\n        }\n    }\n\n    // `this` could be a jQuery instance\n    jQueryMode = this && this instanceof scopedWindow.jQuery\n\n    if (params._chain) {\n        rootNode = params.root\n    } else if (jQueryMode) {\n        params.root = rootNode = this[0]\n    } else {\n        rootNode = qs(params.root || params.scroller)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (!rootNode) {\n            log('error', [\n                'Baron initialization failed: root node not found.'\n            ].join(', '), params)\n\n            return // or return baron-shell?\n        }\n    }\n\n    var attr = manageAttr(rootNode, params.direction)\n    var id = +attr // Could be NaN\n\n    params.index = id\n\n    // baron() can return existing instances,\n    // @TODO update params on-the-fly\n    // https://github.com/Diokuz/baron/issues/124\n    if (id == id && attr !== null && instances[id]) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (withParams) {\n                log('error', [\n                    'repeated initialization for html-node detected',\n                    'https://github.com/Diokuz/baron/blob/master/docs/logs/repeated.md'\n                ].join(', '), params.root)\n            }\n        }\n\n        return instances[id]\n    }\n\n    // root and scroller can be different nodes\n    if (params.root && params.scroller) {\n        params.scroller = qs(params.scroller, rootNode)\n        if (process.env.NODE_ENV !== 'production') {\n            if (!params.scroller) {\n                log('error', 'Scroller not found!', rootNode, params.scroller)\n            }\n        }\n    } else {\n        params.scroller = rootNode\n    }\n\n    params.root = rootNode\n\n    var instance = init(params)\n\n    if (instance.autoUpdate) {\n        instance.autoUpdate()\n    }\n\n    return instance\n}\n\nfunction arrayEach(_obj, iterator) {\n    var i = 0\n    var obj = _obj\n\n    if (obj.length === undefined || obj === scopedWindow) obj = [obj]\n\n    while (obj[i]) {\n        iterator.call(this, obj[i], i)\n        i++\n    }\n}\n\n// shortcut for getTime\nfunction getTime() {\n    return new Date().getTime()\n}\n\nif (process.env.NODE_ENV !== 'production') {\n    baron._instances = instances\n}\n\nfunction manageEvents(item, eventManager, mode) {\n    // Creating new functions for one baron item only one time\n    item._eventHandlers = item._eventHandlers || [\n        {\n            // onScroll:\n            element: item.scroller,\n\n            handler: function(e) {\n                item.scroll(e)\n            },\n\n            type: 'scroll'\n        }, {\n            // css transitions & animations\n            element: item.root,\n\n            handler: function() {\n                item.update()\n            },\n\n            type: 'transitionend animationend'\n        }, {\n            // onKeyup (textarea):\n            element: item.scroller,\n\n            handler: function() {\n                item.update()\n            },\n\n            type: 'keyup'\n        }, {\n            // onMouseDown:\n            element: item.bar,\n\n            handler: function(e) {\n                e.preventDefault() // Text selection disabling in Opera\n                item.selection() // Disable text selection in ie8\n                item.drag.now = 1 // Save private byte\n                if (item.draggingCls) {\n                    add(item.root, item.draggingCls)\n                }\n            },\n\n            type: 'touchstart mousedown'\n        }, {\n            // onMouseUp:\n            element: document,\n\n            handler: function() {\n                item.selection(1) // Enable text selection\n                item.drag.now = 0\n                if (item.draggingCls) {\n                    rm(item.root, item.draggingCls)\n                }\n            },\n\n            type: 'mouseup blur touchend'\n        }, {\n            // onCoordinateReset:\n            element: document,\n\n            handler: function(e) {\n                if (e.button != 2) { // Not RM\n                    item._pos0(e)\n                }\n            },\n\n            type: 'touchstart mousedown'\n        }, {\n            // onMouseMove:\n            element: document,\n\n            handler: function(e) {\n                if (item.drag.now) {\n                    item.drag(e)\n                }\n            },\n\n            type: 'mousemove touchmove'\n        }, {\n            // @TODO make one global listener\n            // onResize:\n            element: scopedWindow,\n\n            handler: function() {\n                item.update()\n            },\n\n            type: 'resize'\n        }, {\n            // @todo remove\n            // sizeChange:\n            element: item.root,\n\n            handler: function() {\n                item.update()\n            },\n\n            type: 'sizeChange'\n        }, {\n            // Clipper onScroll bug https://github.com/Diokuz/baron/issues/116\n            element: item.clipper,\n\n            handler: function() {\n                item.clipperOnScroll()\n            },\n\n            type: 'scroll'\n        }\n    ]\n\n    arrayEach(item._eventHandlers, function(evt) {\n        if (evt.element) {\n            // workaround for element-elements in `fix` plugin\n            // @todo dispose `fix` in proper way and remove workaround\n            if (evt.element.length && evt.element !== scopedWindow) {\n                for (var i = 0; i < evt.element.length; i++) {\n                    eventManager(evt.element[i], evt.type, evt.handler, mode)\n                }\n            } else {\n                eventManager(evt.element, evt.type, evt.handler, mode)\n            }\n        }\n    })\n\n    // if (item.scroller) {\n    //     event(item.scroller, 'scroll', item._eventHandlers.onScroll, mode)\n    // }\n    // if (item.bar) {\n    //     event(item.bar, 'touchstart mousedown', item._eventHandlers.onMouseDown, mode)\n    // }\n    // event(document, 'mouseup blur touchend', item._eventHandlers.onMouseUp, mode)\n    // event(document, 'touchstart mousedown', item._eventHandlers.onCoordinateReset, mode)\n    // event(document, 'mousemove touchmove', item._eventHandlers.onMouseMove, mode)\n    // event(window, 'resize', item._eventHandlers.onResize, mode)\n    // if (item.root) {\n    //     event(item.root, 'sizeChange', item._eventHandlers.onResize, mode)\n    //     // Custon event for alternate baron update mechanism\n    // }\n}\n\n// set, remove or read baron-specific id-attribute\n// @returns {String|null} - id node value, or null, if there is no attr\nfunction manageAttr(node, direction, mode, id) {\n    var attrName = 'data-baron-' + direction + '-id'\n\n    if (mode == 'on') {\n        node.setAttribute(attrName, id)\n    } else if (mode == 'off') {\n        node.removeAttribute(attrName)\n    }\n\n    return node.getAttribute(attrName)\n}\n\nfunction init(params) {\n    var out = new baron.prototype.constructor(params)\n\n    manageEvents(out, params.event, 'on')\n\n    manageAttr(out.root, params.direction, 'on', instances.length)\n    instances.push(out)\n\n    if (process.env.NODE_ENV !== 'production') {\n        liveBarons++\n        if (liveBarons > 100 && !shownErrors.liveTooMany) {\n            log('warn', [\n                'You have too many live baron instances on page (' + liveBarons + ')!',\n                'Are you forget to dispose some of them?',\n                'All baron instances can be found in baron._instances:'\n            ].join(' '), instances)\n            shownErrors.liveTooMany = true\n        }\n        if (instances.length > 1000 && !shownErrors.allTooMany) {\n            log('warn', [\n                'You have too many inited baron instances on page (' + instances.length + ')!',\n                'Some of them are disposed, and thats good news.',\n                'but baron.init was call too many times, and thats is bad news.',\n                'All baron instances can be found in baron._instances:'\n            ].join(' '), instances)\n            shownErrors.allTooMany = true\n        }\n    }\n\n    out.update()\n\n    return out\n}\n\nfunction fire(eventName) {\n    if (this.events && this.events[eventName]) {\n        for (var i = 0; i < this.events[eventName].length; i++) {\n            var args = Array.prototype.slice.call( arguments, 1 )\n\n            this.events[eventName][i].apply(this, args)\n        }\n    }\n}\n\nbaron.prototype = {\n    // underscore.js realization\n    // used in autoUpdate plugin\n    _debounce: function(func, wait) {\n        var self = this,\n            timeout,\n            // args, // right now there is no need for arguments\n            // context, // and for context\n            timestamp\n            // result // and for result\n\n        var later = function() {\n            if (self._disposed) {\n                clearTimeout(timeout)\n                timeout = self = null\n                return\n            }\n\n            var last = getTime() - timestamp\n\n            if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last)\n            } else {\n                timeout = null\n                // result = func.apply(context, args)\n                func()\n                // context = args = null\n            }\n        }\n\n        return function() {\n            // context = this\n            // args = arguments\n            timestamp = getTime()\n\n            if (!timeout) {\n                timeout = setTimeout(later, wait)\n            }\n\n            // return result\n        }\n    },\n\n    constructor: function(params) {\n        var barPos,\n            scrollerPos0,\n            track,\n            resizePauseTimer,\n            scrollingTimer,\n            resizeLastFire,\n            oldBarSize\n\n        resizeLastFire = getTime()\n\n        this.params = params\n        this.event = params.event\n        this.events = {}\n\n        // DOM elements\n        this.root = params.root // Always html node, not just selector\n        this.scroller = qs(params.scroller)\n        if (process.env.NODE_ENV !== 'production') {\n            if (this.scroller.tagName == 'body') {\n                log('error', [\n                    'Please, do not use BODY as a scroller.',\n                    'https://github.com/Diokuz/baron/blob/master/docs/logs/do-not-use-body.md'\n                ].join(', '), params)\n            }\n        }\n        this.bar = qs(params.bar, this.root)\n        track = this.track = qs(params.track, this.root)\n        if (!this.track && this.bar) {\n            track = this.bar.parentNode\n        }\n        this.clipper = this.scroller.parentNode\n\n        // Parameters\n        this.direction = params.direction\n        this.rtl = params.rtl\n        this.origin = origin[this.direction]\n        this.barOnCls = params.barOnCls\n        this.scrollingCls = params.scrollingCls\n        this.draggingCls = params.draggingCls\n        this.impact = params.impact\n        this.position = params.position\n        this.rtl = params.rtl\n        this.barTopLimit = 0\n        this.resizeDebounce = params.resizeDebounce\n\n        // Updating height or width of bar\n        function setBarSize(_size) {\n            var barMinSize = this.barMinSize || 20\n            var size = _size\n\n            if (size > 0 && size < barMinSize) {\n                size = barMinSize\n            }\n\n            if (this.bar) {\n                css(this.bar, this.origin.size, parseInt(size, 10) + 'px')\n            }\n        }\n\n        // Updating top or left bar position\n        function posBar(_pos) {\n            if (this.bar) {\n                var was = css(this.bar, this.origin.pos),\n                    will = +_pos + 'px'\n\n                if (will && will != was) {\n                    css(this.bar, this.origin.pos, will)\n                }\n            }\n        }\n\n        // Free path for bar\n        function k() {\n            return track[this.origin.client] - this.barTopLimit - this.bar[this.origin.offset]\n        }\n\n        // Relative content top position to bar top position\n        function relToPos(r) {\n            return r * k.call(this) + this.barTopLimit\n        }\n\n        // Bar position to relative content position\n        function posToRel(t) {\n            return (t - this.barTopLimit) / k.call(this)\n        }\n\n        // Cursor position in main direction in px // Now with iOs support\n        this.cursor = function(e) {\n            return e['client' + this.origin.x] ||\n                (((e.originalEvent || e).touches || {})[0] || {})['page' + this.origin.x]\n        }\n\n        // Text selection pos preventing\n        function dontPosSelect() {\n            return false\n        }\n\n        this.pos = function(x) { // Absolute scroller position in px\n            var ie = 'page' + this.origin.x + 'Offset',\n                key = (this.scroller[ie]) ? ie : this.origin.scroll\n\n            if (x !== undefined) this.scroller[key] = x\n\n            return this.scroller[key]\n        }\n\n        this.rpos = function(r) { // Relative scroller position (0..1)\n            var free = this.scroller[this.origin.scrollSize] - this.scroller[this.origin.client],\n                x\n\n            if (r) {\n                x = this.pos(r * free)\n            } else {\n                x = this.pos()\n            }\n\n            return x / (free || 1)\n        }\n\n        // Switch on the bar by adding user-defined CSS classname to scroller\n        this.barOn = function(dispose) {\n            if (this.barOnCls) {\n                var noScroll = this.scroller[this.origin.client] >= this.scroller[this.origin.scrollSize]\n\n                if (dispose || noScroll) {\n                    if (has(this.root, this.barOnCls)) {\n                        rm(this.root, this.barOnCls)\n                    }\n                } else if (!has(this.root, this.barOnCls)) {\n                    add(this.root, this.barOnCls)\n                }\n            }\n        }\n\n        this._pos0 = function(e) {\n            scrollerPos0 = this.cursor(e) - barPos\n        }\n\n        this.drag = function(e) {\n            var rel = posToRel.call(this, this.cursor(e) - scrollerPos0)\n            var sub = (this.scroller[this.origin.scrollSize] - this.scroller[this.origin.client])\n\n            this.scroller[this.origin.scroll] = rel * sub\n        }\n\n        // Text selection preventing on drag\n        this.selection = function(enable) {\n            this.event(document, 'selectpos selectstart', dontPosSelect, enable ? 'off' : 'on')\n        }\n\n        // onResize & DOM modified handler\n        // also fires on init\n        // Note: max/min-size didnt sets if size did not really changed (for example, on init in Chrome)\n        this.resize = function() {\n            var self = this\n            var minPeriod = (self.resizeDebounce === undefined) ? 300 : self.resizeDebounce\n            var delay = 0\n\n            if (getTime() - resizeLastFire < minPeriod) {\n                clearTimeout(resizePauseTimer)\n                delay = minPeriod\n            }\n\n            function upd() {\n                var offset = self.scroller[self.origin.crossOffset]\n                var client = self.scroller[self.origin.crossClient]\n                var padding = 0\n                var was, will\n\n                // https://github.com/Diokuz/baron/issues/110\n                if (isMacFF) {\n                    padding = macmsxffScrollbarSize\n\n                // Opera 12 bug https://github.com/Diokuz/baron/issues/105\n                } else if (client > 0 && offset === 0) {\n                    // Only Opera 12 in some rare nested flexbox cases goes here\n                    // Sorry guys for magic,\n                    // but I dont want to create temporary html-nodes set\n                    // just for measuring scrollbar size in Opera 12.\n                    // 17px for Windows XP-8.1, 15px for Mac (really rare).\n                    offset = client + opera12maxScrollbarSize\n                }\n\n                if (offset) { // if there is no size, css should not be set\n                    self.barOn()\n\n                    if (self.impact == 'scroller') { // scroller\n                        var delta = offset - client + padding\n\n                        // `static` position works only for `scroller` impact\n                        if (self.position == 'static') { // static\n                            was = css(self.scroller, self.origin.crossSize)\n                            will = self.clipper[self.origin.crossClient] + delta + 'px'\n\n                            if (was != will) {\n                                self._setCrossSizes(self.scroller, will)\n                            }\n                        } else { // absolute\n                            var styles = {}\n                            var key = self.rtl ? 'Left' : 'Right'\n\n                            if (self.direction == 'h') {\n                                key = 'Bottom'\n                            }\n\n                            styles['padding' + key] = delta + 'px'\n                            css(self.scroller, styles)\n                        }\n                    } else { // clipper\n                        was = css(self.clipper, self.origin.crossSize)\n                        will = client + 'px'\n\n                        if (was != will) {\n                            self._setCrossSizes(self.clipper, will)\n                        }\n                    }\n                } else {\n                    // do nothing (display: none, or something)\n                }\n\n                Array.prototype.unshift.call(arguments, 'resize')\n                fire.apply(self, arguments)\n\n                resizeLastFire = getTime()\n            }\n\n            if (delay) {\n                resizePauseTimer = setTimeout(upd, delay)\n            } else {\n                upd()\n            }\n        }\n\n        this.updatePositions = function(force) {\n            var newBarSize,\n                self = this\n\n            if (self.bar) {\n                newBarSize = (track[self.origin.client] - self.barTopLimit) *\n                    self.scroller[self.origin.client] / self.scroller[self.origin.scrollSize]\n\n                // Positioning bar\n                if (force || parseInt(oldBarSize, 10) != parseInt(newBarSize, 10)) {\n                    setBarSize.call(self, newBarSize)\n                    oldBarSize = newBarSize\n                }\n\n                barPos = relToPos.call(self, self.rpos())\n\n                posBar.call(self, barPos)\n            }\n\n            Array.prototype.unshift.call( arguments, 'scroll' )\n            fire.apply(self, arguments)\n        }\n\n        // onScroll handler\n        this.scroll = function() {\n            var self = this\n\n            self.updatePositions()\n\n            if (self.scrollingCls) {\n                if (!scrollingTimer) {\n                    add(self.root, self.scrollingCls)\n                }\n                clearTimeout(scrollingTimer)\n                scrollingTimer = setTimeout(function() {\n                    rm(self.root, self.scrollingCls)\n                    scrollingTimer = undefined\n                }, 300)\n            }\n        }\n\n        // https://github.com/Diokuz/baron/issues/116\n        this.clipperOnScroll = function() {\n            // WTF is this line? https://github.com/Diokuz/baron/issues/134\n            // if (this.direction == 'h') return\n\n            // assign `initial scroll position` to `clipper.scrollLeft` (0 for ltr, ~20 for rtl)\n            if (!this.rtl) {\n                this.clipper[this.origin.scrollEdge] = 0\n            } else {\n                this.clipper[this.origin.scrollEdge] = this.clipper[this.origin.scrollSize]\n            }\n        }\n\n        // Flexbox `align-items: stretch` (default) requires to set min-width for vertical\n        // and max-height for horizontal scroll. Just set them all.\n        // http://www.w3.org/TR/css-flexbox-1/#valdef-align-items-stretch\n        this._setCrossSizes = function(node, size) {\n            var styles = {}\n\n            styles[this.origin.crossSize] = size\n            styles[this.origin.crossMinSize] = size\n            styles[this.origin.crossMaxSize] = size\n\n            css(node, styles)\n        }\n\n        // Set common css rules\n        this._dumbCss = function(on) {\n            if (params.cssGuru) return\n\n            var overflow = on ? 'hidden' : null\n            var msOverflowStyle = on ? 'none' : null\n\n            css(this.clipper, {\n                overflow: overflow,\n                msOverflowStyle: msOverflowStyle,\n                position: this.position == 'static' ? '' : 'relative'\n            })\n\n            var scroll = on ? 'scroll' : null\n            var axis = this.direction == 'v' ? 'y' : 'x'\n            var scrollerCss = {}\n\n            scrollerCss['overflow-' + axis] = scroll\n            scrollerCss['box-sizing'] = 'border-box'\n            scrollerCss.margin = '0'\n            scrollerCss.border = '0'\n\n            if (this.position == 'absolute') {\n                scrollerCss.position = 'absolute'\n                scrollerCss.top = '0'\n\n                if (this.direction == 'h') {\n                    scrollerCss.left = scrollerCss.right = '0'\n                } else {\n                    scrollerCss.bottom = '0'\n                    scrollerCss.right = this.rtl ? '0' : ''\n                    scrollerCss.left = this.rtl ? '' : '0'\n                }\n            }\n\n            css(this.scroller, scrollerCss)\n        }\n\n        // onInit actions\n        this._dumbCss(true)\n\n        if (isMacFF) {\n            var padding = 'paddingRight'\n            var styles = {}\n            // getComputedStyle is ie9+, but we here only in f ff\n            var paddingWas = scopedWindow.getComputedStyle(this.scroller)[[padding]]\n\n            if (params.direction == 'h') {\n                padding = 'paddingBottom'\n            } else if (params.rtl) {\n                padding = 'paddingLeft'\n            }\n\n            var numWas = parseInt(paddingWas, 10)\n\n            if (numWas != numWas) numWas = 0\n            styles[padding] = (macmsxffScrollbarSize + numWas) + 'px'\n            css(this.scroller, styles)\n        }\n\n        return this\n    },\n\n    // fires on any update and on init\n    update: function(params) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._disposed) {\n                log('error', [\n                    'Update on disposed baron instance detected.',\n                    'You should clear your stored baron value for this instance:',\n                    this\n                ].join(' '), params)\n            }\n        }\n\n        fire.call(this, 'upd', params) // Update all plugins' params\n\n        this.resize(1)\n        this.updatePositions(1)\n\n        return this\n    },\n\n    // One instance\n    dispose: function() {\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._disposed) {\n                log('error', 'Already disposed:', this)\n            }\n\n            liveBarons--\n        }\n\n        manageEvents(this, this.event, 'off')\n        manageAttr(this.root, this.params.direction, 'off')\n        if (this.params.direction == 'v') {\n            this._setCrossSizes(this.scroller, '')\n        } else {\n            this._setCrossSizes(this.clipper, '')\n        }\n        this._dumbCss(false)\n        this.barOn(true)\n        fire.call(this, 'dispose')\n        instances[this.params.index] = null\n        this.params = null\n        this._disposed = true\n    },\n\n    on: function(eventName, func, arg) {\n        var names = eventName.split(' ')\n\n        for (var i = 0; i < names.length; i++) {\n            if (names[i] == 'init') {\n                func.call(this, arg)\n            } else {\n                this.events[names[i]] = this.events[names[i]] || []\n\n                this.events[names[i]].push(function(userArg) {\n                    func.call(this, userArg || arg)\n                })\n            }\n        }\n    },\n\n    baron: function(params) {\n        params.root = this.params.root\n        params.scroller = this.params.scroller\n        params.direction = (this.params.direction == 'v') ? 'h' : 'v'\n        params._chain = true\n\n        return baron(params)\n    }\n}\n\n// baron.fn.constructor.prototype = baron.fn\nbaron.prototype.constructor.prototype = baron.prototype\n\n// Use when you need \"baron\" global var for another purposes\nbaron.noConflict = function() {\n    scopedWindow.baron = _baron // Restoring original value of \"baron\" global var\n\n    return baron\n}\n\nbaron.version = '3.0.1'\n\nbaron.prototype.autoUpdate = require('./autoUpdate')(scopedWindow)\nbaron.prototype.fix = require('./fix')\nbaron.prototype.controls = require('./controls')\n\nmodule.exports = baron\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../public/node_modules/baron/src/core.js\n// module id = 354\n// module chunks = 0","'use strict'\n\n/* Autoupdate plugin for baron 0.6+ */\n\nfunction autoUpdateOne(MutationObserver) {\n    var self = this\n    var watcher\n\n    if (this._au) {\n        return\n    }\n\n    function actualizeWatcher() {\n        if (!self.root[self.origin.offset]) {\n            startWatch()\n        } else {\n            stopWatch()\n        }\n    }\n\n    // Set interval timeout for watching when root node will be visible\n    function startWatch() {\n        if (watcher) return\n\n        watcher = setInterval(function() {\n            if (self.root[self.origin.offset]) {\n                stopWatch()\n                self.update()\n            }\n        }, 300) // is it good enought for you?)\n    }\n\n    function stopWatch() {\n        clearInterval(watcher)\n        watcher = null\n    }\n\n    var debouncedUpdater = self._debounce(function() {\n        self.update()\n    }, 300)\n\n    this._observer = new MutationObserver(function() {\n        actualizeWatcher()\n        self.update()\n        debouncedUpdater()\n    })\n\n    this.on('init', function() {\n        self._observer.observe(self.root, {\n            childList: true,\n            subtree: true,\n            characterData: true\n            // attributes: true\n            // No reasons to set attributes to true\n            // The case when root/child node with already properly inited baron toggled to hidden and then back to visible,\n            // and the size of parent was changed during that hidden state, is very rare\n            // Other cases are covered by watcher, and you still can do .update by yourself\n        })\n\n        actualizeWatcher()\n    })\n\n    this.on('dispose', function() {\n        self._observer.disconnect()\n        stopWatch()\n        delete self._observer\n    })\n\n    this._au = true\n}\n\nmodule.exports = function autoUpdateCreator(win) {\n    var MutationObserver = win.MutationObserver || win.WebKitMutationObserver || win.MozMutationObserver || null\n\n    return function autoUpdate() {\n        if (!MutationObserver) return this\n\n        autoUpdateOne.call(this, MutationObserver)\n\n        return this\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../public/node_modules/baron/src/autoUpdate.js\n// module id = 355\n// module chunks = 0","'use strict'\n\n/* Fixable elements plugin for baron */\n\nvar log = require('./log')\nvar css = require('./utils').css\nvar add = require('./utils').add\nvar rm = require('./utils').rm\n\nmodule.exports = function fix(userParams) {\n    var elements,\n        viewPortSize,\n        params = { // Default params\n            outside: '',\n            inside: '',\n            before: '',\n            after: '',\n            past: '',\n            future: '',\n            radius: 0,\n            minView: 0\n        },\n        topFixHeights = [], // inline style for element\n        topRealHeights = [], // ? something related to negative margins for fixable elements\n        headerTops = [], // offset positions when not fixed\n        scroller = this.scroller,\n        eventManager = this.event,\n        self = this\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (this.position != 'static') {\n            log('error', [\n                'Fix plugin cannot work properly in non-static baron position.',\n                'See more https://github.com/Diokuz/baron/issues/135'\n            ].join(' '), this.params)\n        }\n    }\n\n    // i - number of fixing element, pos - fix-position in px, flag - 1: top, 2: bottom\n    // Invocation only in case when fix-state changed\n    function fixElement(i, _pos, flag) {\n        var pos = _pos\n        var ori = flag == 1 ? 'pos' : 'oppos'\n\n        if (viewPortSize < (params.minView || 0)) { // No headers fixing when no enought space for viewport\n            pos = undefined\n        }\n\n        // Removing all fixing stuff - we can do this because fixElement triggers only when fixState really changed\n        css(elements[i], this.origin.pos, '')\n        css(elements[i], this.origin.oppos, '')\n        rm(elements[i], params.outside)\n\n        // Fixing if needed\n        if (pos !== undefined) {\n            pos += 'px'\n            css(elements[i], this.origin[ori], pos)\n            add(elements[i], params.outside)\n        }\n    }\n\n    function bubbleWheel(e) {\n        try {\n            var i = document.createEvent('WheelEvent') // i - for extra byte\n\n            // evt.initWebKitWheelEvent(deltaX, deltaY, window, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey)\n            i.initWebKitWheelEvent(e.originalEvent.wheelDeltaX, e.originalEvent.wheelDeltaY)\n            scroller.dispatchEvent(i)\n            e.preventDefault()\n        } catch (ex) {\n            //\n        }\n    }\n\n    function init(_params) {\n        var pos\n\n        for (var key in _params) {\n            params[key] = _params[key]\n        }\n\n        if (params.elements instanceof HTMLElement) {\n            elements = [params.elements]\n        } else if (typeof params.elements == 'string') {\n            elements = this.scroller.querySelectorAll(params.elements)\n        } else if (params.elements && params.elements[0] instanceof HTMLElement) {\n            elements = params.elements\n        }\n\n        if (elements) {\n            viewPortSize = this.scroller[this.origin.client]\n            for (var i = 0; i < elements.length; i++) {\n                // Variable header heights\n                pos = {}\n                pos[this.origin.size] = elements[i][this.origin.offset] + 'px'\n                if (elements[i].parentNode !== this.scroller) {\n                    css(elements[i].parentNode, pos)\n                }\n                pos = {}\n                pos[this.origin.crossSize] = elements[i].parentNode[this.origin.crossClient] + 'px'\n                css(elements[i], pos)\n\n                // Between fixed headers\n                viewPortSize -= elements[i][this.origin.offset]\n\n                headerTops[i] = elements[i].parentNode[this.origin.offsetPos] // No paddings for parentNode\n\n                // Summary elements height above current\n                topFixHeights[i] = (topFixHeights[i - 1] || 0) // Not zero because of negative margins\n                topRealHeights[i] = (topRealHeights[i - 1] || Math.min(headerTops[i], 0))\n\n                if (elements[i - 1]) {\n                    topFixHeights[i] += elements[i - 1][this.origin.offset]\n                    topRealHeights[i] += elements[i - 1][this.origin.offset]\n                }\n\n                if ( !(i == 0 && headerTops[i] == 0)/* && force */) {\n                    this.event(elements[i], 'mousewheel', bubbleWheel, 'off')\n                    this.event(elements[i], 'mousewheel', bubbleWheel)\n                }\n            }\n\n            if (params.limiter && elements[0]) { // Bottom edge of first header as top limit for track\n                if (this.track && this.track != this.scroller) {\n                    pos = {}\n                    pos[this.origin.pos] = elements[0].parentNode[this.origin.offset] + 'px'\n                    css(this.track, pos)\n                } else {\n                    this.barTopLimit = elements[0].parentNode[this.origin.offset]\n                }\n                // this.barTopLimit = elements[0].parentNode[this.origin.offset]\n                this.scroll()\n            }\n\n            if (params.limiter === false) { // undefined (in second fix instance) should have no influence on bar limit\n                this.barTopLimit = 0\n            }\n        }\n\n        var event = {\n            element: elements,\n\n            handler: function() {\n                var parent = this.parentNode,\n                    top = parent.offsetTop,\n                    num\n\n                // finding num -> elements[num] === this\n                for (var j = 0; j < elements.length; j++ ) {\n                    if (elements[j] === this) num = j\n                }\n\n                var locPos = top - topFixHeights[num]\n\n                if (params.scroll) { // User defined callback\n                    params.scroll({\n                        x1: self.scroller.scrollTop,\n                        x2: locPos\n                    })\n                } else {\n                    self.scroller.scrollTop = locPos\n                }\n            },\n\n            type: 'click'\n        }\n\n        if (params.clickable) {\n            this._eventHandlers.push(event) // For auto-dispose\n            // eventManager(event.element, event.type, event.handler, 'off')\n            for (var j = 0; j < event.element.length; j++) {\n                eventManager(event.element[j], event.type, event.handler, 'on')\n            }\n        }\n    }\n\n    this.on('init', init, userParams)\n\n    var fixFlag = [], // 1 - past, 2 - future, 3 - current (not fixed)\n        gradFlag = []\n\n    this.on('init scroll', function() {\n        var fixState, hTop, gradState\n        var i\n\n        if (elements) {\n            var change\n\n            // fixFlag update\n            for (i = 0; i < elements.length; i++) {\n                fixState = 0\n                if (headerTops[i] - this.pos() < topRealHeights[i] + params.radius) {\n                    // Header trying to go up\n                    fixState = 1\n                    hTop = topFixHeights[i]\n                } else if (headerTops[i] - this.pos() > topRealHeights[i] + viewPortSize - params.radius) {\n                    // Header trying to go down\n                    fixState = 2\n                    // console.log('topFixHeights[i] + viewPortSize + topRealHeights[i]', topFixHeights[i], this.scroller[this.origin.client], topRealHeights[i])\n                    hTop = this.scroller[this.origin.client] - elements[i][this.origin.offset] - topFixHeights[i] - viewPortSize\n                    // console.log('hTop', hTop, viewPortSize, elements[this.origin.offset], topFixHeights[i])\n                    // (topFixHeights[i] + viewPortSize + elements[this.origin.offset]) - this.scroller[this.origin.client]\n                } else {\n                    // Header in viewport\n                    fixState = 3\n                    hTop = undefined\n                }\n\n                gradState = false\n                if (headerTops[i] - this.pos() < topRealHeights[i] || headerTops[i] - this.pos() > topRealHeights[i] + viewPortSize) {\n                    gradState = true\n                }\n\n                if (fixState != fixFlag[i] || gradState != gradFlag[i]) {\n                    fixElement.call(this, i, hTop, fixState)\n                    fixFlag[i] = fixState\n                    gradFlag[i] = gradState\n                    change = true\n                }\n            }\n\n            // Adding positioning classes (on last top and first bottom header)\n            if (change) { // At leats one change in elements flag structure occured\n                for (i = 0; i < elements.length; i++) {\n                    if (fixFlag[i] == 1 && params.past) {\n                        add(elements[i], params.past)\n                        rm(elements[i], params.future)\n                    }\n\n                    if (fixFlag[i] == 2 && params.future) {\n                        add(elements[i], params.future)\n                        rm(elements[i], params.past)\n                    }\n\n                    if (fixFlag[i] == 3) {\n                        rm(elements[i], params.past)\n                        rm(elements[i], params.future)\n                        add(elements[i], params.inside)\n                    }\n\n                    if (fixFlag[i] != fixFlag[i + 1] && fixFlag[i] == 1) {\n                        add(elements[i], params.before)\n                        rm(elements[i], params.after) // Last top fixed header\n                    } else if (fixFlag[i] != fixFlag[i - 1] && fixFlag[i] == 2) {\n                        add(elements[i], params.after)\n                        rm(elements[i], params.before) // First bottom fixed header\n                    } else {\n                        rm(elements[i], params.before)\n                        rm(elements[i], params.after)\n                    }\n\n                    if (params.grad) {\n                        if (gradFlag[i]) {\n                            add(elements[i], params.grad)\n                        } else {\n                            rm(elements[i], params.grad)\n                        }\n                    }\n                }\n            }\n        }\n    })\n\n    this.on('resize upd', function(updParams) {\n        init.call(this, updParams && updParams.fix)\n    })\n\n    return this\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../public/node_modules/baron/src/fix.js\n// module id = 356\n// module chunks = 0","'use strict'\n\n/* Controls plugin for baron */\n\nvar qs = require('./utils').qs\n\nmodule.exports = function controls(params) {\n    var forward, backward, track, screen,\n        self = this,\n        event\n\n    screen = params.screen || 0.9\n\n    if (params.forward) {\n        forward = qs(params.forward, this.clipper)\n\n        event = {\n            element: forward,\n\n            handler: function() {\n                var y = self.pos() + (params.delta || 30)\n\n                self.pos(y)\n            },\n\n            type: 'click'\n        }\n\n        this._eventHandlers.push(event) // For auto-dispose\n        this.event(event.element, event.type, event.handler, 'on')\n    }\n\n    if (params.backward) {\n        backward = qs(params.backward, this.clipper)\n\n        event = {\n            element: backward,\n\n            handler: function() {\n                var y = self.pos() - (params.delta || 30)\n\n                self.pos(y)\n            },\n\n            type: 'click'\n        }\n\n        this._eventHandlers.push(event) // For auto-dispose\n        this.event(event.element, event.type, event.handler, 'on')\n    }\n\n    if (params.track) {\n        if (params.track === true) {\n            track = this.track\n        } else {\n            track = qs(params.track, this.clipper)\n        }\n\n        if (track) {\n            event = {\n                element: track,\n\n                handler: function(e) {\n                    // https://github.com/Diokuz/baron/issues/121\n                    if (e.target != track) return\n\n                    var x = e['offset' + self.origin.x],\n                        xBar = self.bar[self.origin.offsetPos],\n                        sign = 0\n\n                    if (x < xBar) {\n                        sign = -1\n                    } else if (x > xBar + self.bar[self.origin.offset]) {\n                        sign = 1\n                    }\n\n                    var y = self.pos() + sign * screen * self.scroller[self.origin.client]\n\n                    self.pos(y)\n                },\n\n                type: 'mousedown'\n            }\n\n            this._eventHandlers.push(event) // For auto-dispose\n            this.event(event.element, event.type, event.handler, 'on')\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../public/node_modules/baron/src/controls.js\n// module id = 357\n// module chunks = 0"],"sourceRoot":""}